---
description: 
globs: 
alwaysApply: true
---
# Email Assistant Cursor Rules Index

This project implements an AI-powered Gmail voice assistant using a Chrome Extension frontend and Python backend.

## Architecture Overview
See [email-assistant.mdc](mdc:.cursor/rules/email-assistant.mdc) for complete system architecture.

## Business Value & Strategy
See [business-value.mdc](mdc:.cursor/rules/business-value.mdc) for product vision, target users, and success metrics.

## Development Rules

### Backend Development
- [backend-python.mdc](mdc:.cursor/rules/backend-python.mdc) - Python server patterns and Google Cloud integration

### Frontend Development  
- [chrome-extension.mdc](mdc:.cursor/rules/chrome-extension.mdc) - Chrome Extension with Plasmo framework

### API & Protocols
- [api-protocol.mdc](mdc:.cursor/rules/api-protocol.mdc) - WebSocket protocol and message formats

### Project Setup
- [project-setup.mdc](mdc:.cursor/rules/project-setup.mdc) - Environment configuration and deployment

## Quick Start

1. **Backend**: `cd browser_use && python server.py`
2. **Extension**: `cd plasmo-my-email-ai && pnpm dev`
3. Load extension in Chrome and navigate to Gmail
4. Toggle ON to start voice assistant

## Key Technologies

- **Backend**: FastAPI, Google Speech-to-Text, Gemini LLM, Browser-Use
- **Frontend**: React, TypeScript, Plasmo, WebSocket
- **Communication**: Real-time WebSocket for audio streaming
- **Task Management**: Task Master AI for project planning

## Common Commands

### Voice Commands
- "Hello, can you hear me?" - Test connection
- "Check my emails" - List unread emails  
- "Compose new email" - Open compose window
- "Reply to first email" - Open reply interface

### Development Commands
```bash
# Backend
python server.py

# Extension
pnpm dev       # Development
pnpm build     # Production
pnpm package   # Chrome Web Store

# Task Management  
task-master list
task-master next
```

## Support & Documentation

- Check individual rule files for detailed patterns
- Monitor logs with session IDs for debugging
- Use emoji prefixes in console logs
- Test in Gmail with Chrome DevTools open

---

Remember: This is a voice-first interface. Always prioritize audio quality, real-time feedback, and graceful error handling.
